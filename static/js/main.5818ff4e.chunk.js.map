{"version":3,"sources":["components/Contacts/ContactForm.jsx","components/Contacts/ContactHeading.jsx","components/Contacts/ContactCleaners.jsx","components/Contacts/Contact.jsx","Store.js","App.jsx","serviceWorker.js","index.js"],"names":["ContactForm","state","Fragment","Modal","isOpen","this","props","isModal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","type","name","value","firstName","onChange","changeHandler","ModalFooter","Button","color","onClick","handleSubmit","React","Component","ContactHeading","modal","AddCleaner","setState","prevState","className","id","style","cursor","data-toggle","title","ContactCleaners","optionsOpen","showMenu","cleaners","map","profile","key","aria-haspopup","aria-expanded","tabIndex","role","aria-hidden","x-placement","position","willChange","top","left","transform","data-placement","src","userImage","alt","City","yearsInOperation","connect","store","profiles","Contact","imageLoaded","createStore","action","HouseType","Description","houseImage","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5818ff4e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Modal isOpen={this.props.isModal}>\r\n          <ModalHeader\r\n            // toggle={\r\n            //   this.props.isEditing\r\n            //     ? this.props.toggle\r\n            //     : this.props.toggleAddQuestion\r\n            // }\r\n          >\r\n            {/* <div> {this.props.isEditing ? \"Update Task\" : \"Add New Task\"}</div> */}\r\n            <div> New Contact </div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label>First Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"task\"\r\n                  value={this.state.firstName}\r\n                  onChange={this.changeHandler}\r\n                ></Input>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label>Last Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"task\"\r\n                  value={this.state.firstName}\r\n                  onChange={this.changeHandler}\r\n                ></Input>\r\n              </FormGroup>\r\n\r\n              {/* <FormGroup>\r\n                <Label>Priority</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"priority\"\r\n                  value={this.state.priority}\r\n                  onChange={this.changeHandler}\r\n                >\r\n                  <option>----</option>\r\n                  <option>High</option>\r\n                  <option>Medium</option>\r\n                  <option>Low</option>\r\n                </Input>\r\n              </FormGroup> */}\r\n            </Form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.handleSubmit}>\r\n              {/* {this.props.isEditing ? \"Update\" : \"Add\"} */}\r\n            Add\r\n            </Button>{\" \"}\r\n            <Button\r\n              color=\"secondary\"\r\n              // onClick={\r\n              //   this.props.isEditing\r\n              //     ? this.props.toggle\r\n              //     : this.props.toggleAddQuestion\r\n              // }\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport ContactForm from \"./ContactForm\";\r\n\r\nclass ContactHeading extends React.Component {\r\n  state = {\r\n    modal: false\r\n  };\r\n\r\n  AddCleaner = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"content-heading\">\r\n          Cleaners\r\n          <div className=\"ml-auto\">\r\n            <em\r\n              className=\"fa-1x mr-2 fas fa-search\"\r\n              id=\"searchProfiles\"\r\n              // onClick={this.toggleAddQuestion}\r\n              style={{ cursor: \"pointer\" }}\r\n              data-toggle=\"tooltip\"\r\n              title=\"Search Cleaners\"\r\n            ></em>\r\n            <em\r\n              className=\"fa-1x mr-2 fas fa-user-plus\"\r\n              onClick={this.AddCleaner}\r\n              style={{ cursor: \"pointer\" }}\r\n              data-toggle=\"tooltip\"\r\n              title=\"Add Cleaner\"\r\n            ></em>\r\n          </div>\r\n        </div>\r\n        < ContactForm  isModal={this.state.modal} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactHeading;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ContactCleaners extends React.Component {\r\n  state = {\r\n    optionsOpen: false\r\n  };\r\n\r\n  showMenu = () => {\r\n    //Need to find a way to only open one menu at a time. Not all.\r\n    this.setState(prevState => ({\r\n      optionsOpen: !prevState.optionsOpen\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n          <div className=\"row\"> \r\n        {this.props &&\r\n          this.props.cleaners.map(profile => (\r\n           <div className=\"col-sm-6 col-lg-4\" key={profile.id}>\r\n              <div className=\"card-default card\">\r\n                <div className=\"ml-auto\">\r\n                  <div className=\"dropdown\">\r\n                    <button\r\n                      type=\"button\"\r\n                      aria-haspopup=\"true\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"btn btn-outline-secondary\"\r\n                      onClick={this.showMenu}\r\n                      // onClick={this.activeMenu}\r\n                    >\r\n                      <em className=\"fa fa-ellipsis-h fa-lg\" />\r\n                    </button>\r\n                    <div\r\n                      tabIndex={-1}\r\n                      role=\"menu\"\r\n                      aria-hidden=\"true\"\r\n                      className={\r\n                        this.state.optionsOpen\r\n                          ? \"dropdown-menu-right-forced animated fadeInLeft dropdown-menu show\"\r\n                          : \"dropdown-menu-right-forced animated fadeInLeft dropdown-menu\"\r\n                      }\r\n                      x-placement=\"bottom-start\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        willChange: \"transform\",\r\n                        top: 0,\r\n                        left: 0,\r\n                        transform: \"translate3d(-106px, 31px, 0px)\"\r\n                      }}\r\n                      data-placement=\"bottom-start\"\r\n                    >\r\n                      <button\r\n                        type=\"button\"\r\n                        tabIndex={0}\r\n                        className=\"dropdown-item\"\r\n                      >\r\n                        <em className=\"fa-fw fa fa-plus mr-2\" />\r\n                        <span>Edit contact</span>\r\n                      </button>\r\n\r\n                      {/* <button\r\n                        type=\"button\"\r\n                        tabIndex={0}\r\n                        className=\"dropdown-item\"\r\n\r\n                      >\r\n                        <em className=\"fa-fw fa fa-plus mr-2\" />\r\n                        <span>New contact</span>\r\n                      </button> */}\r\n\r\n                      <button\r\n                        type=\"button\"\r\n                        tabIndex={0}\r\n                        className=\"dropdown-item\"\r\n                      >\r\n                        <em className=\"fa-fw fas fa-minus mr-2\" />\r\n                        <span>Delete contact</span>\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        tabIndex={0}\r\n                        className=\"dropdown-item\"\r\n                      >\r\n                        <em className=\"fa-fw fas fa-share mr-2\" />\r\n                        <span>Share contact</span>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* End of Menu */}\r\n\r\n                {/* Start of Card */}\r\n\r\n                <div className=\"text-center card-body\">\r\n                  <img\r\n                    className=\" mb-2 rounded-circle-thumb32\"\r\n                    src={profile.userImage}\r\n                    alt=\"Contact\"\r\n                    id=\"profilePhoto\"\r\n                  />\r\n                  <h4>{profile.name}</h4>\r\n                  <h5 className=\"text-muted\">{profile.City}</h5>\r\n                  {/* <p>{profile.Description}</p> */}\r\n                  <span>Years in operation: {profile.yearsInOperation}</span>\r\n                </div>\r\n                <div className=\"d-flex card-footer\">\r\n                  {/* <div> */}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-dark btn-lg btn-block\"\r\n                  >\r\n                    View Contact\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToPros(store) {\r\n  return {\r\n    cleaners: store.profiles\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToPros)(ContactCleaners);\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Contact.css\";\r\n// import ProfileContact from \"./ProfileContact\";\r\nimport ContactHeading from \"./ContactHeading\";\r\nimport ContactCleaners from \"./ContactCleaners\";\r\n\r\nclass Contact extends React.Component {\r\n  state = {\r\n    //Can do image loading thing once you connect to the backend.\r\n    imageLoaded: false,\r\n  };\r\n\r\n  //   contact = (aContact) => (\r\n  //  <ProfileContact key={aContact} profile={aContact} />\r\n  //   )\r\n\r\n  // componentDidMount (){\r\n  //   this.setMenu();\r\n  // }\r\n\r\n  // setMenu = () => {\r\n  //   //Need to find a way to only open one menu at a time. Not all.\r\n  //   const menu = [\"Open\", \"Close\"]\r\n  //   this.setState(() => ({\r\n  //     optionsOpen: menu.map(menuType => ({\r\n  //       // menuType,\r\n  //       isActive: false\r\n  //     }))\r\n  //   }))\r\n  // }\r\n\r\n  // activeMenu = item => {\r\n  // this.setState(menu => ({\r\n  //   optionsOpen: menu.optionsOpen.map(activeItem => {\r\n  //     if(activeItem.menuType === item){\r\n  //       activeItem.isActive = !activeItem.isActive\r\n  //     }\r\n  //     return activeItem;\r\n  //   })\r\n  // }))\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <ContactHeading />\r\n          {/* <div className=\"row\"> */}\r\n            <ContactCleaners />\r\n          {/* </div> */}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Contact;\r\n","import { createStore } from \"redux\";\r\n\r\nfunction reducer(store, action) {\r\n  if (!store) {\r\n    return {\r\n      profiles: [\r\n        {\r\n          id: 1,\r\n          name: \"Ofelia Hernandez\",\r\n          yearsInOperation: 1,\r\n          HouseType: \"House\",\r\n          Description:\r\n            \"Provide eco-friendly solutions to your cleaning problems.\",\r\n          City: \"Long Beach\",\r\n          userImage:\r\n            \"https://images.pexels.com/photos/1239288/pexels-photo-1239288.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n          houseImage:\r\n            \"https://images.pexels.com/photos/1438832/pexels-photo-1438832.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"Anita Smith\",\r\n          yearsInOperation: 8,\r\n          HouseType: \"House\",\r\n          Description: \"Fast and reliant service all year long.\",\r\n          City: \"Downey\",\r\n          userImage:\r\n            \"https://images.pexels.com/photos/774909/pexels-photo-774909.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n          houseImage:\r\n            \"https://images.pexels.com/photos/139115/pexels-photo-139115.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500 no-repeat\"\r\n        },\r\n        {\r\n          id: 3,\r\n          name: \"Harry Max\",\r\n          yearsInOperation: 2,\r\n          HouseType: \"Apartment\",\r\n          Description: \"I am ok at cleaing.\",\r\n          City: \"Cerritos\",\r\n          userImage:\r\n            \"https://upload.wikimedia.org/wikipedia/commons/4/48/Outdoors-man-portrait_%28cropped%29.jpg\",\r\n          houseImage:\r\n            \"https://images.pexels.com/photos/276724/pexels-photo-276724.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 no-repeat\"\r\n        },\r\n        {\r\n          id: 4,\r\n          name: \"Jo Kondo\",\r\n          yearsInOperation: 2,\r\n          HouseType: \"Apartment\",\r\n          Description: \"Let me help you become a super star host.\",\r\n          City: \"Torrance\",\r\n          userImage:\r\n            \"https://images.pexels.com/photos/1300402/pexels-photo-1300402.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n          houseImage:\r\n            \"https://images.pexels.com/photos/276724/pexels-photo-276724.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 no-repeat\"\r\n        },\r\n        {\r\n          id: 5,\r\n          name: \"Red Dragon\",\r\n          yearsInOperation: 2,\r\n          HouseType: \"Apartment\",\r\n          Description: \"Will leave your place smoking clean.\",\r\n          City: \"Torrance\",\r\n          userImage:\r\n            \"https://images.pexels.com/photos/1222271/pexels-photo-1222271.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n          houseImage:\r\n            \"https://images.pexels.com/photos/276724/pexels-photo-276724.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940 no-repeat\"\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\nexport default createStore(reducer);\r\n","import React from \"react\";\n// import Profiles from \"./components/Profile/Profiles.jsx.js.js.js\";\nimport Contact from \"./components/Contacts/Contact\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\n\nclass App extends React.Component {\n  state = {};\n\n  render() {\n    return (\n      <React.Fragment>\n        <Provider store={store}>\n          <div className=\"App\">\n            {/* <header className=\"App-header\"> */}\n            {/* <Profiles /> */}\n            <Contact />\n            {/* </header> */}\n          </div>\n        </Provider>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}